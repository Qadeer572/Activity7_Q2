name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run unit tests
      run: npm test -- tests/unit.test.js
    
    - name: Run integration tests
      run: npm test -- tests/integration.test.js
    
    - name: Run all tests with coverage
      run: npm test
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report-node-${{ matrix.node-version }}
        path: coverage/
        retention-days: 30
    
    - name: Display test summary
      if: always()
      run: |
        echo "========================================="
        echo "CI Pipeline Test Summary"
        echo "========================================="
        echo "Node Version: ${{ matrix.node-version }}"
        echo "Branch: ${{ github.ref }}"
        echo "Commit: ${{ github.sha }}"
        echo "Status: ${{ job.status }}"
        echo "========================================="
        
    - name: Check test results
      if: failure()
      run: |
        echo "❌ Tests failed! Build marked as failed."
        exit 1

  build-status:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: Check build status
      run: |
        echo "========================================="
        echo "Final Build Status Report"
        echo "========================================="
        if [ "${{ needs.test.result }}" == "success" ]; then
          echo "✅ All tests passed successfully!"
          echo "Build is ready for deployment."
        else
          echo "❌ Build failed! Check test results above."
          exit 1
        fi
        echo "========================================="